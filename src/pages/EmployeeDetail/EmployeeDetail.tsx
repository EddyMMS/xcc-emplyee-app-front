import React, { useEffect, useState } from 'react';
import { useParams } from 'react-router-dom';
import axios from 'axios';
import { Container, Typography, CircularProgress, Box, Alert } from '@mui/material';

const EmployeeDetails: React.FC = () => {
  const { uuid } = useParams<{ uuid: string }>();

  const [employee, setEmployee] = useState<any | null>(null);
  const [loading, setLoading] = useState<boolean>(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    const fetchEmployee = async () => {
      try {
        setLoading(true);
        // TODO: Use autogenerated api
        const response = await axios.get(`http://localhost:8080/employees/${uuid}`);
        setEmployee(response.data);

        setError(null);
      } catch (err) {
        console.error('Error fetching employee:', err);
        setError('Error loading employee! Try again later.');
      } finally {
        setLoading(false);
      }
    };

    fetchEmployee();
  }, [uuid]);

  if (loading) {
    return (
      <Box display="flex" justifyContent="center" my={4}>
        <CircularProgress />
      </Box>
    );
  }

  if (error) {
    return (
      <Alert severity="error" sx={{ mb: 2 }}>
        {error}
      </Alert>
    );
  }

  if (!employee) {
    return (
      <Typography variant="h6" component="h2">
        Employee not found
      </Typography>
    );
  }

  return (
    <Container maxWidth="lg" sx={{ mt: 4, mb: 4 }}>
      <Typography variant="h4" component="h1" gutterBottom>
        Employee Details
      </Typography>
      <Typography variant="body1">Name: {employee.name.firstName} {employee.name.lastName}</Typography>
      <Typography variant="body1">Department: {employee.department}</Typography>
      <Typography variant="body1">Birthdate: {employee.birthdate}</Typography>
      <Typography variant="body1">Gender: {employee.gender}</Typography>
      <Typography variant="body1">Hourly Rate: {employee.hourlyRate}</Typography>
      <Typography variant="body1">Hours per Week: {employee.hoursPerWeek}</Typography>
      <Typography variant="body1">Monthly Salary: {employee.monthlySalary}</Typography>
    </Container>
  );
};

export default EmployeeDetails;
